# -*- mode: coffee; tab-width: 2; -*-
#
# TODO: rename to AbstractCardView
#
class CardView extends Backbone.View

  @MENU_ITEM_HTML = """
                     <li class='{{clazz}}' title='{{title}}'>
                      {{name}}
                     </li>
                    """

  @tagName: 'div'
  @className: 'card'

  constructor: (params) ->
    super(params)
    @model.bind 'change', @render

    @menu_item_template = _.template(CardView.MENU_ITEM_HTML)
    @template = _.template($('#card-template').html())
    @el = $(@template(@model.toJSON()))

    @img = @$('img')
    @menu = @$('ul.menu')

    @el.click (event) =>
      event.preventDefault()
      event.stopPropagation()
      @menu.show()
      console.info event
      @menu.offset( left: event.clientX - 20, top: event.clientY - 20)

    @el.data('game-object',this)
    # LEGACY
    @element = @el

  close_menu: =>
    @menu.hide()

  add_menu_item: (clazz, name, title, callback) =>
    item = @menu_item_template(name: name, clazz: clazz, title: title)
    @menu.append(item)
    @$(".menu .#{clazz}").click(callback)

  show_detail: (e) =>
    if @visible() and !@dragged
      @close_menu()
      new CardDetailView(model: @model, position: @el.offset())

    @dragged = false
    false

  render: =>
    @el.find('.debug').text(@model.order())
    @show_image()
    @show_tapping()
    @_render_overlay()
    @el.show()
    this

  _render_overlay: =>
    if @model.counters()?
      @$('.counters').fadeIn().text(@model.counters())

    if @model.toughness()? or @model.power()?
      @$('.power').fadeIn().text("#{@model.power() || 0}/#{@model.toughness() || 0}")

  show_image: =>
    if @model.covered()
      @img.attr('src','/images/back.jpg')
    else
      @img.attr('src',@model.image())

  show_tapping: =>
    if @model.tapped()
      $(@el).addClass('tapped')
    else
      $(@el).removeClass('tapped')


window.CardView = CardView
