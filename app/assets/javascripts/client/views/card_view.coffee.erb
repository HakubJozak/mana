# -*- mode: coffee; tab-width: 2; -*-
#
# TODO: rename to AbstractCardView
#
class CardView extends Backbone.View

  @tagName: 'div'
  @className: 'card'

  constructor: (params) ->
    super(params)
    @model.bind 'change', @render
    @template = _.template($('#card-template').html())
    @el = $(@template(@model.toJSON()))
    @img = @el.find('img')

    @el.draggable
      position: 0,
      scope: 'cards',
      snap: '.card',
      snapMode: 'inner',
      scroll: true,
      revert: 'invalid',
      containment: 'window',
      zIndex: 99999,
      stack: '.card',

    @el.bind 'click', @clicked

    # LEGACY
    @el.data('game-object',this)
    @element = @el

  clicked: (e) =>
    e.preventDefault()
    e.stopPropagation()
    new CardDetailView(model: @model, position: @el.offset()) if @visible()


  render: =>
    @el.find('.debug').text(@model.order())
    @show_image()
    @show_tapping()
    @_render_overlay()
    @el.show()
    this

  _render_overlay: =>
    if @model.counters()?
      @$('.counters').fadeIn().text(@model.counters())

    if @model.toughness()? or @model.power()?
      @$('.power').fadeIn().text("#{@model.power() || 0}/#{@model.toughness() || 0}")

  show_image: =>
    if @model.covered()
      @img.attr('src','/images/back.jpg')
    else
      @img.attr('src',@model.image())

  show_tapping: =>
    if @model.tapped()
      $(@el).addClass('tapped')
    else
      $(@el).removeClass('tapped')


window.CardView = CardView
